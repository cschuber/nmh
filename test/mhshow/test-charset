#!/bin/sh
######################################################
#
# Test charset conversion functionality
#
######################################################

set -e

if test -z "${MH_OBJ_DIR}"; then
    srcdir=`dirname "$0"`/../..
    MH_OBJ_DIR=`cd "$srcdir" && pwd`; export MH_OBJ_DIR
fi

. "$MH_OBJ_DIR/test/common.sh"

setup_test

check_exit '-eq 1' mhshow -

require_locale en_US.UTF-8 en_US.UTF8 en_US.utf-8 en_US.utf8

skip_param_value_checks=0
if test "$ICONV_ENABLED" -eq 0; then
    text_size=10
else
    text_size=11
    #### For unknown reasons, the parameter values checks fail on the
    #### FreeBSD10 buildbot.  It doesn't support EBCDIC-US, which is used
    #### by the checks, so check for that.  Though that doesn't seem to be
    #### the reason.
    utf8="`printf '\344' | iconv -f EBCDIC-US -t UTF-8 2>/dev/null`" &&
    test x"$utf8" = xU ||
        skip_param_value_checks=1
fi

expected=$MH_TEST_DIR/$$.expected
actual=$MH_TEST_DIR/$$.actual

echo 'mhshow-charset-windows-1252: echo "This is a test"' >> "$MH"

# Write message with bogus quoted-printable data.
start_test 'Write message with bogus quoted-printable data'
msgfile=`mhpath new`
msgnum=`basename $msgfile`
cat > $msgfile <<EOF
From: foo@example.edu
To: bar@example.edu
Subject: test
MIME-Version: 1.0
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: quoted-printable
Content-Description: bogus quoted-printable data
Date: Sun, 18 Dec 2005 00:52:39 +0100

4 =F7 2 =3D 2
EOF

cat > $expected <<EOF
[ Message inbox:11 ]
Date:    Sun, 18 Dec 2005 00:52:39 +0100
To:      bar@example.edu
From:    foo@example.edu
Subject: test

MIME-Version: 1.0
Content-Description: bogus quoted-printable data

[ part  - text/plain - bogus quoted-printable data  ${text_size}B  ]
This is a test
EOF

run_prog mhshow $msgnum > $actual 2>&1
check "$expected" "$actual" 'keep first' : bogus quoted-printable data


start_test 'locale profile component'
#### Used LC_ALL above, now use locale profile component instead.
printf "locale: $LC_ALL\n" >> "${MH}"
unset LC_ALL

run_prog mhshow $msgnum > $actual 2>&1
check "$expected" "$actual" : locale profile component


if test $skip_param_value_checks -eq 1; then
    finish_test
    exit $failed
fi


start_test 'Encoded parameter value'
msgfile=`mhpath new`
msgnum=`basename $msgfile`
#### The encoded charset name is really UTF-8 encoded,
#### but say it's UTF-16 to exercise the iconv code,
#### if it's available, in get_param_value().
cat > $msgfile <<EOF
From: foo@example.edu
To: bar@example.edu
Subject: test
MIME-Version: 1.0
Content-Type: text/plain; charset*=EBCDIC-US''%e4%e3%c6%60%f8
Content-Transfer-Encoding: quoted-printable
Content-Description: bogus quoted-printable data
Date: Sun, 18 Dec 2005 00:52:39 +0100

4 =C3=B7 2 =3D 2
EOF

cat > $expected <<EOF
[ Message inbox:12 ]
Date:    Sun, 18 Dec 2005 00:52:39 +0100
To:      bar@example.edu
From:    foo@example.edu
Subject: test

MIME-Version: 1.0
Content-Description: bogus quoted-printable data

[ part  - text/plain - bogus quoted-printable data  11B  ]
4 รท 2 = 2
EOF

run_prog mhshow $msgnum > $actual 2>&1
check "$expected" "$actual" : encoded parameter value


start_test 'replacement character in parameter value'
#### The output of this test doesn't show it, but it covers the
#### noiconv: portion of get_param_value().
cat > $msgfile <<'EOF'
Subject: invalid parameter value charset
MIME-Version: 1.0
Content-Type: text/plain; charset*=invalid''%0Dus-ascii
EOF

cat > $expected <<EOF
[ Message inbox:12 ]
Subject: invalid parameter value charset

MIME-Version: 1.0

[ part  - text/plain -   0B  ]
EOF

run_prog mhshow $msgnum > $actual 2>&1
check "$expected" "$actual"


finish_test
exit $failed
